<?xml version="1.0" encoding="utf-8"?>
<programList xmlns="ProgramNameSpace">
  <program name="changeValue" public="true">
    <description />
    <paramSection>
      <param name="x_nValue" type="num" byVal="false" />
      <param name="x_nMin" type="num" byVal="true" />
      <param name="x_nMax" type="num" byVal="true" />
      <param name="x_nX" type="num" byVal="true" />
      <param name="x_nY" type="num" byVal="true" />
      <param name="x_sItems" type="string" byVal="false" />
    </paramSection>
    <localSection>
      <local name="l_nOldValue" type="num" size="2" />
      <local name="l_sItem" type="string" size="1" />
      <local name="l_sMessage" type="string" size="1" />
      <local name="l_sEmpty" type="string" size="1" />
      <local name="l_bComma" type="bool" size="1" />
    </localSection>
    <source>
      <code>begin
  //---------------------------------
  // Staubli copyright 2005
  //                By toneage
  //[Public]-------------------------
  //
  // x_nValue:  num to change
  // x_nMax:    max value
  // x_nMin:    min value
  // x_nX:      X position
  // x_nY:      Y position
  // x_sItems   message
  //
  // look if the value is between max and min
  //
  if x_nMin&gt;x_nMax
    return
  endIf
  //
  // print the line in white
  //
  if size(sItems)&gt;nView+nFirst
    if sItems[nView+nFirst]!=""
      call val3Function:setTextMode(0)
      call typeLen(nTopX+1,x_nY,sItems[nView+nFirst],nBottomX[1])
    endIf
  endIf
  //
  call nullKey(nKey)
  l_nOldValue[1]=round(x_nValue)
  x_nValue=(round(x_nValue*100))/100
  l_nOldValue=x_nValue
  // check if is using the comma or not
  if l_nOldValue!=l_nOldValue[1]
    l_bComma=true
  else
    l_bComma=false
  endIf
  // start
  call clear(0,13)
  do
    if x_sItems==""
      //
      //  use the get num
      //
      if l_bComma
        call strfill(l_sEmpty,len(toString(".2",x_nValue)),l_sEmpty)
      else
        call strfill(l_sEmpty,len(toString("",x_nValue)),l_sEmpty)
      endIf
      call type(x_nX,x_nY,l_sEmpty)
      gotoxy(x_nX,x_nY)
      nKey=get(x_nValue)
      //
      // CHECK for MIN MAX VALUE
      //
      if x_nMax!=x_nMin
        if x_nValue&gt;x_nMax
          //
          // ask if you want to continue
          //
          popUpMsg("MAX: "+toString(".2",x_nMax))
          x_nValue=l_nOldValue
          //x_nValue=x_nMax
          nKey=-1
        else
          if x_nValue&lt;x_nMin
            //
            popUpMsg("MIN: "+toString(".2",x_nMin))
            //x_nValue=x_nMin
            x_nValue=l_nOldValue
            nKey=-1
          endIf
        endIf
      endIf
      //
      // UPDATE THE VALUE
      //
      if l_bComma
        call type(x_nX,x_nY,toString(".2",x_nValue))
      else
        call type(x_nX,x_nY,toString("",x_nValue))
      endIf
    else
      // STRING CHOICE
      nKey=getKey()
      switch nKey
        // CHANGE THE ITEMS ARRAY
        case 261
          // UP
          x_nValue=abs((x_nValue+1)%size(x_sItems))
        break
        case 266
          // DOWN
          x_nValue=abs((x_nValue+size(x_sItems)-1)%size(x_sItems))
        break
      endSwitch
      //
      // UPDATE THE VALUE
      //
      call val3Function:setTextMode(3)
      call typeLen(x_nX,x_nY,x_sItems[x_nValue],10)
      call val3Function:setTextMode(0)
    endIf
    // release the resource
    delay(0)
  until nKey==270 or nKey==255
  if nKey==255
    bUseEscape=true
    x_nValue=l_nOldValue
    if x_sItems!=""
      x_sItems=x_sItems[l_nOldValue]
    endIf
  else
    bUseEscape=false
  endIf
  // leave the resource
  delay(0)
end

      </code>
    </source>
  </program>
</programList>