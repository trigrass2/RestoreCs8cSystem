<?xml version="1.0" encoding="utf-8" ?>
<programList xmlns="ProgramNameSpace" >
  <program name="topMenu" public="true" >
    <description />
    <paramSection>
      <param name="sParMenuName" type="string" byVal="true" />
      <param name="bShowName" type="bool" byVal="true" />
      <param name="nParY" type="num" byVal="true" />
    </paramSection>
    <localSection>
      <local name="sMenuItem" type="string" size="8" />
      <local name="sEmpty" type="string" size="1" />
      <local name="nActualItem" type="num" size="1" />
      <local name="i" type="num" size="1" />
    </localSection>
    <source>
      <code>begin
  //
  // insert all the choises of your menu into menuname,
  // divide them using the char &quot;-&quot;
  // if the char &quot;-&quot; is used at the beginning of the 
  // string an empty place will insert in your choises
  //
  //
  // usage
  // menuname&quot;choice1-choise2-..choise7-choice8-&quot;
  //
  // if you want to show at the top of your function key
  // the name of the choice that you write,select showNameMenu
  // on true otherwise a sequential number will appear
  //
  // the page will start from the y- line
  cls()
  sEmpty=&quot;&quot;
  nActualItem=0
  for i=0 to 7
    sMenuItem[i]=sEmpty
  endFor
  do
    i=find(sParMenuName,&quot;-&quot;)
    if i!=-1
      sMenuItem[nActualItem]=left(sParMenuName,i)
      sParMenuName=delete(sParMenuName,i+1,0)
      nActualItem=nActualItem+1
    endIf
  until i==-1
  for i=0 to 7
    if sMenuItem[i]!=sEmpty
      if bShowName==false
        call typeMenu(i+1,true,&quot; F&quot;+toString(&quot;1&quot;,i+1))
      else
        call typeMenu(i+1,true,sMenuItem[i])
      endIf
      call type(0,i+nParY,(&quot;F&quot;+(toString(&quot;1&quot;,i+1)+&quot; &quot;+sMenuItem[i])))
    endIf
  endFor
end

      
      
      
      </code>
    </source>
  </program>
</programList>